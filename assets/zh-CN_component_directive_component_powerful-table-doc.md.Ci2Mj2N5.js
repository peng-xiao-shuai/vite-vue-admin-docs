import{c as r,O as e,k as l,E as t,a as s,A as p,o as d}from"./chunks/framework.CmyazEwt.js";const u={class:"vp-table"},i={class:"vp-table"},y={id:"listrequest",tabindex:"-1"},D={class:"vp-table"},c={class:"vp-table"},b={class:"vp-table"},E={class:"vp-table"},C={class:"vp-table"},g={class:"vp-table"},m={class:"vp-table"},v={id:"text-emit-event",tabindex:"-1"},f={class:"vp-table"},w={class:"vp-table"},P={id:"image-emit-event",tabindex:"-1"},T={class:"vp-table"},F={class:"vp-table"},A={id:"switch-emit-event",tabindex:"-1"},x={class:"vp-table"},k={id:"input-emit-event",tabindex:"-1"},q={class:"vp-table"},S={id:"video-emit-event",tabindex:"-1"},R={class:"vp-table"},j={class:"vp-table"},L={id:"iconfont-emit-event",tabindex:"-1"},B={class:"vp-table"},H={class:"vp-table"},I={id:"rate-emit-event",tabindex:"-1"},N={class:"vp-table"},K={class:"vp-table"},O={id:"tag-emit-event",tabindex:"-1"},z={class:"vp-table"},U={class:"vp-table"},V={id:"utils",tabindex:"-1"},Y={class:"vp-table"},M={class:"vp-table"},J=JSON.parse('{"title":"PowerfulTable","description":"","frontmatter":{"title":"PowerfulTable","lang":"zh-CN","outline":[1,5]},"headers":[],"relativePath":"zh-CN/component_directive/component/powerful-table-doc.md","filePath":"zh-CN/component_directive/component/powerful-table-doc.md","lastUpdated":1728380874000}'),$={name:"zh-CN/component_directive/component/powerful-table-doc.md"},Q=Object.assign($,{setup(G){return(X,n)=>{const a=p("tag"),o=p("api-typing");return d(),r("div",null,[n[339]||(n[339]=e('<h1 id="elpluspowerfultablets" tabindex="-1">ElPlusPowerfulTableTs <a class="header-anchor" href="#elpluspowerfultablets" aria-label="Permalink to &quot;ElPlusPowerfulTableTs&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>element-plus</code> 二次开发表格组件。此插件已 <code>el-plus-powerful-table</code> 作为基础，进行重构。部分功能将领先 <code>el-plus-powerful-table</code> 基础版本。 <code>el-plus-powerful-table</code> 的 <code>ts</code> 版本。<a href="https://peng-xiao-shuai.github.io/el-plus-powerful-table/" target="_blank" rel="noreferrer">DEMO</a></p></div><h6 id="标签" tabindex="-1">标签 <a class="header-anchor" href="#标签" aria-label="Permalink to &quot;标签&quot;">​</a></h6>',3)),l("blockquote",null,[t(a,{type:"danger",content:"[版本号]"}),n[0]||(n[0]=s(" 表示功能")),n[1]||(n[1]=l("code",null,"废弃",-1)),n[2]||(n[2]=s()),n[3]||(n[3]=l("br",null,null,-1)),t(a,{type:"success",content:"[版本号]"}),n[4]||(n[4]=s(" 表示功能")),n[5]||(n[5]=l("code",null,"新增",-1)),n[6]||(n[6]=s()),n[7]||(n[7]=l("br",null,null,-1))]),n[340]||(n[340]=e(`<h6 id="语言" tabindex="-1">语言 <a class="header-anchor" href="#语言" aria-label="Permalink to &quot;语言&quot;">​</a></h6><p>对于语言方面组件是默认使用 <code>英语</code> 因为 <code>element-plus</code> 默认是使用<code>英语</code>，不引用中文包的主要原因是避免增大体积。 组件内部语言跟随 <code>element-plus</code>。 部分 提示文字 语言，组件内部也支持 <code>中、英</code> 文，如果你需要支持更多语言或者更改组件内部 的语言，可以在 <code>use(PowerfulTable, { local: 您的语言变量 })</code> 替换。也可以参考我们提供的 <code>demo</code> 实现。</p><h3 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-label="Permalink to &quot;使用方法&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-YlT28" id="tab-jRzd6mT" checked="checked"><label for="tab-jRzd6mT">npm</label><input type="radio" name="group-YlT28" id="tab-eK3MwaW"><label for="tab-eK3MwaW">yarn</label><input type="radio" name="group-YlT28" id="tab-4y2vhAU"><label for="tab-4y2vhAU">pnpm</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">i</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">el-plus-powerful-table-ts</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">el-plus-powerful-table-ts</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#DCDCAA;">yarn</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">add</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">el-plus-powerful-table-ts</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">el-plus-powerful-table-ts</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#DCDCAA;">pnpm</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">add</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">el-plus-powerful-table-ts</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">el-plus-powerful-table-ts</span></span></code></pre></div></div></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-WLC0R" id="tab-uKrmrSK" checked="checked"><label for="tab-uKrmrSK">main.ts</label><input type="radio" name="group-WLC0R" id="tab-TOIGPYz"><label for="tab-TOIGPYz">app.vue</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">powerfulTable</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;el-plus-powerful-table-ts/es&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">LangKey</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;el-plus-powerful-table-ts/es/locale/packages&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">app</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">createApp</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">App</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">use</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">powerfulTable</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// 更改组件默认语言</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">locale:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">en:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.NoData]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;空&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.PackUp]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;收起&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.ReadFullText]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;展开阅读全文&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// ...</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&#39;zh-cn&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.NoData]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;空&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.PackUp]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;收起&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[LangKey.ReadFullText]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;展开阅读全文&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// ...</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">mount</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;#app&quot;</span><span style="color:#D4D4D4;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> powerfulTable </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;el-plus-powerful-table-ts/es&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { LangKey } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;el-plus-powerful-table-ts/es/locale/packages&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">app</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createApp</span><span style="color:#24292E;">(App);</span></span>
<span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(powerfulTable, {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 更改组件默认语言</span></span>
<span class="line"><span style="color:#24292E;">  locale: {</span></span>
<span class="line"><span style="color:#24292E;">    en: {</span></span>
<span class="line"><span style="color:#24292E;">      [LangKey.NoData]: </span><span style="color:#032F62;">&#39;空&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      [LangKey.PackUp]: </span><span style="color:#032F62;">&#39;收起&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      [LangKey.ReadFullText]: </span><span style="color:#032F62;">&#39;展开阅读全文&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;zh-cn&#39;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      [LangKey.NoData]: </span><span style="color:#032F62;">&#39;空&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      [LangKey.PackUp]: </span><span style="color:#032F62;">&#39;收起&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      [LangKey.ReadFullText]: </span><span style="color:#032F62;">&#39;展开阅读全文&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">mount</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;#app&quot;</span><span style="color:#24292E;">);</span></span></code></pre></div><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">powerful-table</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">header</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">header</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">powerful-table</span><span style="color:#24292E;"> :</span><span style="color:#6F42C1;">list</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">list</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> :</span><span style="color:#6F42C1;">header</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">header</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div></div></div><h2 id="config-attributes" tabindex="-1">Config Attributes <a class="header-anchor" href="#config-attributes" aria-label="Permalink to &quot;Config Attributes&quot;">​</a></h2><blockquote><p>通过 <code>app.use</code> 注入 (优先级小于局部配置)</p></blockquote>`,7)),l("div",u,[l("table",null,[n[16]||(n[16]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[n[15]||(n[15]=l("tr",null,[l("td",null,[l("code",null,"locale")]),l("td",null,[s("内部部分文字语言 "),l("a",{href:"https://github.com/peng-xiao-shuai/el-plus-powerful-table/blob/master-ts/packages/locale/packages.ts",target:"_blank",rel:"noreferrer"},[l("strong",null,"查看可选值")])]),l("td",null,[l("code",null,"LangPackages")]),l("td",null,"-")],-1)),l("tr",null,[l("td",null,[n[8]||(n[8]=l("code",null,"listRequest",-1)),t(a,{type:"success",content:"2.2.0"})]),n[9]||(n[9]=l("td",null,"列表请求，具体属性查看下方详情",-1)),l("td",null,[t(o,{type:"object",details:"InjectProps['listRequest']"})]),n[10]||(n[10]=l("td",null,"-",-1))]),l("tr",null,[l("td",null,[n[11]||(n[11]=l("code",null,"emptyElement",-1)),t(a,{type:"success",content:"2.2.0"})]),n[12]||(n[12]=l("td",null,"列表数据为空时渲染的组件",-1)),n[13]||(n[13]=l("td",null,[l("code",null,"Component")],-1)),n[14]||(n[14]=l("td",null,"-",-1))])])])]),n[341]||(n[341]=l("h2",{id:"attributes",tabindex:"-1"},[s("Attributes "),l("a",{class:"header-anchor",href:"#attributes","aria-label":'Permalink to "Attributes"'},"​")],-1)),l("div",i,[l("table",null,[n[51]||(n[51]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[l("tr",null,[n[17]||(n[17]=l("td",null,[l("code",null,"size")],-1)),n[18]||(n[18]=l("td",null,[s("组件大小（默认跟随 "),l("code",null,"element-plus"),s("）")],-1)),l("td",null,[t(o,{type:"string",details:"'medium' | 'small' | 'mini'"})]),n[19]||(n[19]=l("td",null,[l("code",null,"small")],-1))]),n[47]||(n[47]=l("tr",null,[l("td",null,[l("code",null,"list")]),l("td",null,"数据"),l("td",null,[l("code",null,"array")]),l("td",null,"-")],-1)),l("tr",null,[n[20]||(n[20]=l("td",null,[l("code",null,"header")],-1)),n[21]||(n[21]=l("td",null,"表格头部配置",-1)),l("td",null,[t(o,{type:"array",details:"PowerfulTableHeader<Row = any>"})]),n[22]||(n[22]=l("td",null,"-",-1))]),n[48]||(n[48]=l("tr",null,[l("td",null,[l("code",null,"selectData")]),l("td",null,"选中的数据"),l("td",null,[l("code",null,"array")]),l("td",null,"-")],-1)),l("tr",null,[n[23]||(n[23]=l("td",null,[l("code",null,"selectCompare")],-1)),n[24]||(n[24]=l("td",null,[s("选中数据和列表数据相比较的参数"),l("code",null,"[0]选中数据属性名，[1]列表数据属性名")],-1)),l("td",null,[t(o,{type:"array",details:"string[]"})]),n[25]||(n[25]=l("td",null,[l("code",null,"['id', 'id']")],-1))]),n[49]||(n[49]=l("tr",null,[l("td",null,[l("code",null,"isSelect")]),l("td",null,"是否显示多选"),l("td",null,[l("code",null,"boolean")]),l("td",null,[l("code",null,"false")])],-1)),l("tr",null,[l("td",null,[n[26]||(n[26]=l("code",null,"listRequest",-1)),t(a,{type:"success",content:"2.2.0"})]),n[27]||(n[27]=l("td",null,"列表请求",-1)),l("td",null,[t(o,{type:"object",details:"InjectProps['listRequest'] & { listApi: (params: object) => Promise; listQuery?: object }"})]),n[28]||(n[28]=l("td",null,"-",-1))]),l("tr",null,[n[29]||(n[29]=l("td",null,[l("code",null,"selectable")],-1)),n[30]||(n[30]=l("td",null,"当前行是否可以选中",-1)),l("td",null,[t(o,{type:"function",details:"(row: Row, index: number) => boolean"})]),n[31]||(n[31]=l("td",null,"-",-1))]),n[50]||(n[50]=l("tr",null,[l("td",null,[l("code",null,"isPagination")]),l("td",null,"是否显示分页器"),l("td",null,[l("code",null,"boolean")]),l("td",null,[l("code",null,"false")])],-1)),l("tr",null,[n[32]||(n[32]=l("td",null,[l("code",null,"operateData")],-1)),n[33]||(n[33]=l("td",null,"批量操作",-1)),l("td",null,[t(o,{type:"object",details:"PowerfulTableOperateData"})]),n[34]||(n[34]=l("td",null,"-",-1))]),l("tr",null,[n[35]||(n[35]=l("td",null,[l("code",null,"btnConfig")],-1)),n[36]||(n[36]=l("td",null,"表格顶部按钮配置",-1)),l("td",null,[t(o,{type:"object",details:"BtnConfig"})]),n[37]||(n[37]=l("td",null,"-",-1))]),l("tr",null,[n[38]||(n[38]=l("td",null,[l("code",null,"tree")],-1)),n[39]||(n[39]=l("td",null,"树形表格配置",-1)),l("td",null,[t(o,{type:"object",details:"PowerfulTableTree"})]),n[40]||(n[40]=l("td",null,"-",-1))]),l("tr",null,[n[41]||(n[41]=l("td",null,[l("code",null,"paginationProperty")],-1)),n[42]||(n[42]=l("td",null,"分页器组件扩展字段",-1)),l("td",null,[t(o,{type:"object",details:"Partial<PaginationProps>"})]),n[43]||(n[43]=l("td",null,"-",-1))]),l("tr",null,[n[44]||(n[44]=l("td",null,[l("code",null,"property")],-1)),n[45]||(n[45]=l("td",null,"表格组件扩展字段",-1)),l("td",null,[t(o,{type:"object",details:"Partial<TableProps<Row>>"})]),n[46]||(n[46]=l("td",null,"-",-1))])])])]),l("h3",y,[n[52]||(n[52]=s("ListRequest ")),t(a,{type:"success",content:"2.2.0"}),n[53]||(n[53]=s()),n[54]||(n[54]=l("a",{class:"header-anchor",href:"#listrequest","aria-label":`Permalink to "ListRequest <tag type='success' content='2.2.0' />"`},"​",-1))]),n[342]||(n[342]=e('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="https://peng-xiao-shuai.github.io/vite-vue-admin-docs/zh-CN/component/powerful-table-demo.html#%E4%BC%A0%E9%80%92-api-%E7%94%A8%E6%B3%95" target="_blank" rel="noreferrer"><strong>使用方式</strong></a></p></div><div class="vp-table"><table><thead><tr><th>属性名</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>pageNoKey</code></td><td>页数 <code>key</code></td><td><code>string</code></td><td><code>&#39;pageNo&#39;</code></td></tr><tr><td><code>pageSizeKey</code></td><td>条数 <code>key</code></td><td><code>string</code></td><td><code>&#39;pageSize&#39;</code></td></tr><tr><td><code>responseKey</code></td><td>返回值 <code>key</code>，多层数据结构使用 <code>.</code> 连接</td><td><code>string</code></td><td><code>&#39;data.result&#39;</code></td></tr><tr><td><code>totalKey</code></td><td>总条数 <code>key</code></td><td><code>string</code></td><td><code>&#39;total&#39;</code></td></tr><tr><td><code>listsKey</code></td><td>数据 <code>key</code></td><td><code>string</code></td><td><code>&#39;rows&#39;</code></td></tr></tbody></table></div><p><strong>当使用组件传递 <code>ListRequest</code> 时（非全局注入），格外新增 <code>2</code> 个属性</strong></p>',3)),l("div",D,[l("table",null,[n[59]||(n[59]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[n[58]||(n[58]=l("tr",null,[l("td",null,[l("code",null,"listQuery")]),l("td",null,"请求格外参数"),l("td",null,[l("code",null,"object")]),l("td",null,[l("code",null,"{}")])],-1)),l("tr",null,[n[55]||(n[55]=l("td",null,[l("code",null,"listApi")],-1)),n[56]||(n[56]=l("td",null,"请求接口",-1)),l("td",null,[t(o,{type:"function",details:"(params: object) => any)"})]),n[57]||(n[57]=l("td",null,"-",-1))])])])]),n[343]||(n[343]=l("h3",{id:"operatedata",tabindex:"-1"},[s("OperateData "),l("a",{class:"header-anchor",href:"#operatedata","aria-label":'Permalink to "OperateData"'},"​")],-1)),n[344]||(n[344]=l("div",{class:"tip custom-block"},[l("p",{class:"custom-block-title"},"TIP"),l("p",null,[s("如果表格有 "),l("code",null,"header.props.type"),s(" 为 "),l("code",null,"input"),s(" 的则需要先填写该行数据，在选中该行，否则会出现获取不到 "),l("code",null,"input"),s(" 的值")])],-1)),l("div",c,[l("table",null,[n[72]||(n[72]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[n[69]||(n[69]=l("tr",null,[l("td",null,[l("code",null,"value")]),l("td",null,"下拉选中值"),l("td",null,[l("code",null,"string")]),l("td",null,"-")],-1)),n[70]||(n[70]=l("tr",null,[l("td",null,[l("code",null,"style")]),l("td",null,"按钮样式"),l("td",null,[l("code",null,"CSSProperties")]),l("td",null,"-")],-1)),n[71]||(n[71]=l("tr",null,[l("td",null,[l("code",null,"prop")]),l("td",null,[s("批量操作后 "),l("code",null,"batchOperate"),s(" 返回的 "),l("code",null,"ids"),s(" 中的数据是根据指定 "),l("code",null,"prop"),s(" 返回数组")]),l("td",null,[l("code",null,"string")]),l("td",null,[l("code",null,"id")])],-1)),l("tr",null,[n[60]||(n[60]=l("td",null,[l("code",null,"btnProperty")],-1)),n[61]||(n[61]=l("td",null,[l("code",null,"el-button"),s(" 组件扩展字段 (支持 "),l("code",null,"el-button"),s(" 组件所有属性名)")],-1)),l("td",null,[t(o,{type:"object",details:"InstanceType<typeof import('element-plus')['ElSelect']>['$props']"})]),n[62]||(n[62]=l("td",null,"-",-1))]),l("tr",null,[n[63]||(n[63]=l("td",null,[l("code",null,"selectProperty")],-1)),n[64]||(n[64]=l("td",null,[l("code",null,"el-select"),s(" 组件扩展字段 (支持 "),l("code",null,"el-select"),s(" 组件所有属性名)")],-1)),l("td",null,[t(o,{type:"object",details:"Partial<ButtonProps>"})]),n[65]||(n[65]=l("td",null,"-",-1))]),l("tr",null,[n[66]||(n[66]=l("td",null,[l("code",null,"operates")],-1)),n[67]||(n[67]=l("td",null,"批量操作下拉框数据",-1)),l("td",null,[t(o,{type:"array",details:"PowerfulTableLabelValue[]"})]),n[68]||(n[68]=l("td",null,"-",-1))])])])]),n[345]||(n[345]=e('<h6 id="operatedata-operates" tabindex="-1">OperateData Operates <a class="header-anchor" href="#operatedata-operates" aria-label="Permalink to &quot;OperateData Operates&quot;">​</a></h6><div class="vp-table"><table><thead><tr><th>属性名</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>label</code></td><td>批量操作下拉框显示文字</td><td><code>string</code></td><td>-</td></tr><tr><td><code>value</code></td><td>批量操作下拉框值</td><td><code>string</code></td><td>-</td></tr></tbody></table></div><h3 id="btnconfig" tabindex="-1">BtnConfig <a class="header-anchor" href="#btnconfig" aria-label="Permalink to &quot;BtnConfig&quot;">​</a></h3>',3)),l("div",b,[l("table",null,[n[79]||(n[79]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[l("tr",null,[n[73]||(n[73]=l("td",null,[l("code",null,"btnRightList")],-1)),n[74]||(n[74]=l("td",null,"右侧按钮配置",-1)),l("td",null,[t(o,{type:"array",details:"BtnList[]"})]),n[75]||(n[75]=l("td",null,"-",-1))]),l("tr",null,[n[76]||(n[76]=l("td",null,[l("code",null,"btnList")],-1)),n[77]||(n[77]=l("td",null,"左侧按钮配置",-1)),l("td",null,[t(o,{type:"array",details:"BtnList[]"})]),n[78]||(n[78]=l("td",null,"-",-1))])])])]),n[346]||(n[346]=l("h6",{id:"btnconfig-btnlist",tabindex:"-1"},[s("BtnConfig BtnList "),l("a",{class:"header-anchor",href:"#btnconfig-btnlist","aria-label":'Permalink to "BtnConfig BtnList"'},"​")],-1)),l("div",E,[l("table",null,[n[90]||(n[90]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[n[86]||(n[86]=l("tr",null,[l("td",null,[l("code",null,"style")]),l("td",null,"样式"),l("td",null,[l("code",null,"CSSProperties")]),l("td",null,"-")],-1)),n[87]||(n[87]=l("tr",null,[l("td",null,[l("code",null,"disabled")]),l("td",null,[s("是否禁用 如果为 "),l("code",null,"true"),s(" 那么 "),l("code",null,"operateType"),s(" 的属性名将会失效")]),l("td",null,[l("code",null,"boolean")]),l("td",null,"-")],-1)),l("tr",null,[n[80]||(n[80]=l("td",null,[l("code",null,"operateType")],-1)),n[81]||(n[81]=l("td",null,[s("操作类型："),l("code",null,"none 默认"),s(" (不需要选择数据)，"),l("code",null,"single"),s(" (只能操作一条数据)，"),l("code",null,"batch"),s(" (批量操作数据(至少选择一条数据以上))")],-1)),l("td",null,[t(o,{type:"object",details:"'none' | 'single' | 'batch'"})]),n[82]||(n[82]=l("td",null,"-",-1))]),n[88]||(n[88]=l("tr",null,[l("td",null,[l("code",null,"text")]),l("td",null,"按钮文字"),l("td",null,[l("code",null,"string")]),l("td",null,"-")],-1)),n[89]||(n[89]=l("tr",null,[l("td",null,[l("code",null,"effect")]),l("td",null,[s("自定义数据将会在自定义事件 "),l("code",null,"btn-plus-change"),s(" 抛出")]),l("td",null,[l("code",null,"string")]),l("td",null,"-")],-1)),l("tr",null,[n[83]||(n[83]=l("td",null,[l("code",null,"showBtn")],-1)),n[84]||(n[84]=l("td",null,"控制按钮显示隐藏",-1)),l("td",null,[t(o,{type:"function / boolean",details:"(row: Row, index: number) => boolean | boolean"})]),n[85]||(n[85]=l("td",null,"-",-1))])])])]),n[347]||(n[347]=l("h3",{id:"header",tabindex:"-1"},[s("Header "),l("a",{class:"header-anchor",href:"#header","aria-label":'Permalink to "Header"'},"​")],-1)),l("div",C,[l("table",null,[n[116]||(n[116]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[n[109]||(n[109]=l("tr",null,[l("td",null,[l("code",null,"overflowTooltip")]),l("td",null,"当内容过长被隐藏时显示"),l("td",null,[l("code",null,"boolean")]),l("td",null,[l("code",null,"false")])],-1)),n[110]||(n[110]=l("tr",null,[l("td",null,[l("code",null,"label")]),l("td",null,"显示的标题"),l("td",null,[l("code",null,"string")]),l("td",null,"-")],-1)),n[111]||(n[111]=l("tr",null,[l("td",null,[l("code",null,"minWidth")]),l("td",null,"对应列的最小宽度"),l("td",null,[l("code",null,"string / number")]),l("td",null,[l("code",null,"140")])],-1)),n[112]||(n[112]=l("tr",null,[l("td",null,[l("code",null,"width")]),l("td",null,"对应列的宽度"),l("td",null,[l("code",null,"string / number")]),l("td",null,"-")],-1)),l("tr",null,[n[91]||(n[91]=l("td",null,[l("code",null,"sortable")],-1)),n[92]||(n[92]=l("td",null,"排序",-1)),l("td",null,[t(o,{type:"string / boolean",details:"'custom' | boolean"})]),n[93]||(n[93]=l("td",null,[l("code",null,"false")],-1))]),l("tr",null,[n[94]||(n[94]=l("td",null,[l("code",null,"fixed")],-1)),n[95]||(n[95]=l("td",null,"固定列",-1)),l("td",null,[t(o,{type:"string / boolean",details:"'left' | 'right' | boolean"})]),n[96]||(n[96]=l("td",null,[l("code",null,"false")],-1))]),l("tr",null,[n[97]||(n[97]=l("td",null,[l("code",null,"headerAlign")],-1)),n[98]||(n[98]=l("td",null,"表头对齐方式",-1)),l("td",null,[t(o,{type:"enum",details:"left | 'center' | 'right'"})]),n[99]||(n[99]=l("td",null,[l("code",null,"'center'")],-1))]),n[113]||(n[113]=l("tr",null,[l("td",null,[l("code",null,"headerSlotName")]),l("td",null,"列头插槽"),l("td",null,[l("code",null,"string")]),l("td",null,"-")],-1)),n[114]||(n[114]=l("tr",null,[l("td",null,[l("code",null,"defaultShow")]),l("td",null,"当前列默认显示或隐藏"),l("td",null,[l("code",null,"boolean")]),l("td",null,[l("code",null,"true")])],-1)),n[115]||(n[115]=l("tr",null,[l("td",null,[l("code",null,"defaultFilter")]),l("td",null,[s("当前列默认是否过滤 "),l("code",null,"(isShowOrFilterColumn == 'filter' 时默认 true)")]),l("td",null,[l("code",null,"boolean")]),l("td",null,[l("code",null,"false")])],-1)),l("tr",null,[n[100]||(n[100]=l("td",null,[l("code",null,"isShowOrFilterColumn")],-1)),n[101]||(n[101]=l("td",null,"右侧按钮选择列时是否显示（隐藏和筛选开关组件）",-1)),l("td",null,[t(o,{type:"string / boolean",details:"'show' | 'filter' | false"})]),n[102]||(n[102]=l("td",null,"-",-1))]),l("tr",null,[n[103]||(n[103]=l("td",null,[l("code",null,"props")],-1)),n[104]||(n[104]=l("td",null,"单元格数据",-1)),l("td",null,[t(o,{type:"object",details:"PowerfulTableHeaderProps<null, Row>[] | PowerfulTableHeaderProps<null, Row>"})]),n[105]||(n[105]=l("td",null,"-",-1))]),l("tr",null,[n[106]||(n[106]=l("td",null,[l("code",null,"property")],-1)),n[107]||(n[107]=l("td",null,[l("code",null,"el-table-column"),s(" 组件扩展字段 (支持 "),l("code",null,"el-table-column"),s(" 组件所有属性名)")],-1)),l("td",null,[t(o,{type:"object",details:"Partial<TableColumnCtx<Row>>"})]),n[108]||(n[108]=l("td",null,"-",-1))])])])]),n[348]||(n[348]=l("h4",{id:"props",tabindex:"-1"},[s("Props "),l("a",{class:"header-anchor",href:"#props","aria-label":'Permalink to "Props"'},"​")],-1)),l("div",g,[l("table",null,[n[139]||(n[139]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说 明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[n[132]||(n[132]=l("tr",null,[l("td",null,[l("code",null,"prop")]),l("td",null,[s("数据 "),l("code",null,"key"),s(" 值")]),l("td",null,[l("code",null,"string")]),l("td",null,"-")],-1)),l("tr",null,[n[117]||(n[117]=l("td",null,[l("code",null,"type")],-1)),n[118]||(n[118]=l("td",null,"数据类型",-1)),l("td",null,[t(o,{type:"enum",details:"'image' | 'text' | 'switch' | 'btn' | 'video' | 'input' | 'iconfont' | 'tag' | 'rate' | 'href' | 'slot'"})]),n[119]||(n[119]=l("td",null,[l("code",null,"'text'")],-1))]),n[133]||(n[133]=l("tr",null,[l("td",null,[l("code",null,"data")]),l("td",null,[s("每个类型不一样 "),l("code",null,"data"),s(" 里值也不一样")]),l("td",null,[l("code",null,"_TYPE['xxx']")]),l("td",null,"-")],-1)),l("tr",null,[n[120]||(n[120]=l("td",null,[l("code",null,"filters")],-1)),n[121]||(n[121]=l("td",null,[s("过滤，只支持 "),l("code",null,"type"),s(" 为 "),l("code",null,"text、tag")],-1)),l("td",null,[t(o,{type:"array / function",details:"PowerfulTableFilter[] | (row: Row, index: number) => string"})]),n[122]||(n[122]=l("td",null,[l("code",null,"number")],-1))]),l("tr",null,[n[123]||(n[123]=l("td",null,[l("code",null,"filtersType")],-1)),n[124]||(n[124]=l("td",null,[s("过滤类型用于表格顶部右侧列按钮点击时，是否过滤，如果是则自定义表头将根据类型所弹出相应的操作元素（如果指定了 "),l("code",null,"headerSlotName"),s(" 和 "),l("code",null,"isShowOrFilterColumn"),s(" 为 "),l("code",null,"show"),s(" 或者 "),l("code",null,"false"),s(" 将会无效。如果是 "),l("code",null,"filtersType: select"),s(" 需要指定 "),l("code",null,"filters"),s(" 为数组类型）")],-1)),l("td",null,[t(o,{type:"string",details:"'select' | 'date' | 'input'"})]),n[125]||(n[125]=l("td",null,[l("code",null,"'input'")],-1))]),n[134]||(n[134]=l("tr",null,[l("td",null,[l("code",null,"filterItem")]),l("td",null,[s("指定过滤项 (当 "),l("code",null,"props"),s(" 是数组且长度大于 "),l("code",null,"1"),s(" 时有用) 如果多个 "),l("code",null,"prop"),s(" 的情况下没有指定 "),l("code",null,"filterItem"),s(" 过滤项 那么将使用第一个作进行过滤")]),l("td",null,[l("code",null,"boolean")]),l("td",null,"-")],-1)),l("tr",null,[n[126]||(n[126]=l("td",null,[l("code",null,"customFilter")],-1)),n[127]||(n[127]=l("td",null,[s("自定义过滤数据 "),l("code",null,"v(参数为值)，column(参数为header配置项)，resolve(回调函数传递数组)")],-1)),l("td",null,[t(o,{type:"function",details:"(v, column, resolve) => void"})]),n[128]||(n[128]=l("td",null,"-",-1))]),n[135]||(n[135]=l("tr",null,[l("td",null,[l("code",null,"text")]),l("td",null,"数据左侧显示的文字"),l("td",null,[l("code",null,"string")]),l("td",null,"-")],-1)),n[136]||(n[136]=l("tr",null,[l("td",null,[l("code",null,"reserve")]),l("td",null,[s("当 "),l("code",null,"prop"),s(" 值渲染数据为空时可用 "),l("code",null,"reserve"),s(" 代替空数据 可传 "),l("code",null,"HTML"),s(" 标签")]),l("td",null,[l("code",null,"HTMLElement / string")]),l("td",null,[l("code",null,"'no Data'")])],-1)),l("tr",null,[n[129]||(n[129]=l("td",null,[l("code",null,"render")],-1)),n[130]||(n[130]=l("td",null,[l("a",{href:"https://v3.cn.vuejs.org/guide/render-function.html#h-%E5%8F%82%E6%95%B0",target:"_blank",rel:"noreferrer"},"渲染函数")],-1)),l("td",null,[t(o,{type:"function",details:"(h: h, row: Row, index: number) => VNode / string / number / JSX.Element"})]),n[131]||(n[131]=l("td",null,"-",-1))]),n[137]||(n[137]=l("tr",null,[l("td",null,[l("code",null,"style")]),l("td",null,"样式"),l("td",null,[l("code",null,"CSSProperties")]),l("td",null,"-")],-1)),n[138]||(n[138]=l("tr",null,[l("td",null,[l("code",null,"slotName")]),l("td",null,"插槽名称"),l("td",null,[l("code",null,"string")]),l("td",null,[l("code",null,"'default'")])],-1))])])]),n[349]||(n[349]=e(`<h5 id="filters" tabindex="-1">Filters <a class="header-anchor" href="#filters" aria-label="Permalink to &quot;Filters&quot;">​</a></h5><div class="vp-table"><table><thead><tr><th>属性名</th><th>说明</th><th>TS类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>key</code></td><td>单元格里的数据</td><td><code>string</code></td><td>-</td></tr><tr><td><code>value</code></td><td>需要替换的值</td><td><code>string</code></td><td>-</td></tr></tbody></table></div><h5 id="data" tabindex="-1">Data <a class="header-anchor" href="#data" aria-label="Permalink to &quot;Data&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#6A9955;">// ...</span></span>
<span class="line"><span style="color:#C8C8C8;">data</span><span style="color:#D4D4D4;">: </span><span style="color:#DCDCAA;">setData</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">any</span><span style="color:#D4D4D4;">&gt;({</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">style:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">borderRadius:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;10px&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">property</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> ({ </span><span style="color:#9CDCFE;">row</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">props</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// console.log(row, index, props)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// src: &#39;https://t7.baidu.com/it/u=1819248061,230866778&amp;fm=193&amp;f=GIF&#39;,</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#6A9955;">// ...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#6F42C1;">data</span><span style="color:#24292E;">: </span><span style="color:#6F42C1;">setData</span><span style="color:#24292E;">&lt;</span><span style="color:#032F62;">&#39;image&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">&gt;({</span></span>
<span class="line"><span style="color:#24292E;">  style: {</span></span>
<span class="line"><span style="color:#24292E;">    borderRadius: </span><span style="color:#032F62;">&#39;10px&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">property</span><span style="color:#24292E;">: ({ </span><span style="color:#E36209;">row</span><span style="color:#24292E;">, </span><span style="color:#E36209;">index</span><span style="color:#24292E;">, </span><span style="color:#E36209;">props</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// console.log(row, index, props)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// src: &#39;https://t7.baidu.com/it/u=1819248061,230866778&amp;fm=193&amp;f=GIF&#39;,</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#6A737D;">// ...</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>内部组件中的 <code>Emit</code> 事件将会抛出在 <code>component-emit</code> 上。具体内部组件中有哪些事件返回什么参数，将会在下面文档详细介绍。</p></div><h5 id="type-is-text-default" tabindex="-1">Type is Text（default） <a class="header-anchor" href="#type-is-text-default" aria-label="Permalink to &quot;Type is Text（default）&quot;">​</a></h5>`,6)),l("div",m,[l("table",null,[n[148]||(n[148]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[n[146]||(n[146]=l("tr",null,[l("td",null,[l("code",null,"line")]),l("td",null,[s("超出多少的行数使用 "),l("code",null,"..."),s(" 代替")]),l("td",null,[l("code",null,"number")]),l("td",null,[l("code",null,"3")])],-1)),n[147]||(n[147]=l("tr",null,[l("td",null,[l("code",null,"develop")]),l("td",null,[s("是否显示 "),l("code",null,"“展开 / 收起”"),s(" 操作按钮")]),l("td",null,[l("code",null,"boolean")]),l("td",null,[l("code",null,"false")])],-1)),l("tr",null,[n[140]||(n[140]=l("td",null,[l("code",null,"formatting")],-1)),n[141]||(n[141]=l("td",null,[s("自定义当前单元格数据文本。"),l("code",null,"props"),s(" 为 "),l("code",null,"header"),s(" 配置的当前 "),l("code",null,"props"),s(" 值")],-1)),l("td",null,[t(o,{type:"function",details:"({row: Row, index: number, props: PowerfulTableHeaderProps<'text'>}) => (string | number) "})]),n[142]||(n[142]=l("td",null,"-",-1))]),l("tr",null,[l("td",null,[n[143]||(n[143]=l("code",null,"on",-1)),t(a,{type:"success",content:"2.2.4"})]),n[144]||(n[144]=l("td",null,[s("事件对象，接收下面 "),l("code",null,"Emit"),s(" 相应方法名称")],-1)),l("td",null,[t(o,{type:"object",details:"{click: ({row: Row, index: number, props: PowerfulTableHeaderProps<'text'>}, event: Event) => void}"})]),n[145]||(n[145]=l("td",null,"-",-1))])])])]),l("h6",v,[n[149]||(n[149]=s("Text Emit")),t(a,{type:"danger",content:"3.0.0"}),n[150]||(n[150]=s("/Event")),t(a,{type:"success",content:"2.2.4"}),n[151]||(n[151]=s()),n[152]||(n[152]=l("a",{class:"header-anchor",href:"#text-emit-event","aria-label":`Permalink to "Text Emit<tag type='danger' content=3.0.0 />/Event<tag type='success' content=2.2.4 />"`},"​",-1))]),l("div",f,[l("table",null,[n[155]||(n[155]=l("thead",null,[l("tr",null,[l("th",null,"方法名"),l("th",null,"说明"),l("th",null,"类型")])],-1)),l("tbody",null,[l("tr",null,[n[153]||(n[153]=l("td",null,[l("code",null,"click")],-1)),n[154]||(n[154]=l("td",null,"点击触发",-1)),l("td",null,[t(o,{type:"function",details:"{row: Row, index: number, prop: string, event: Event}"})])])])])]),n[350]||(n[350]=l("h5",{id:"type-is-image",tabindex:"-1"},[s("Type is Image "),l("a",{class:"header-anchor",href:"#type-is-image","aria-label":'Permalink to "Type is Image"'},"​")],-1)),l("div",w,[l("table",null,[n[163]||(n[163]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[n[162]||(n[162]=l("tr",null,[l("td",null,[l("code",null,"style")]),l("td",null,"图片自定义样式"),l("td",null,[l("code",null,"CSSProperties")]),l("td",null,"-")],-1)),l("tr",null,[n[156]||(n[156]=l("td",null,[l("code",null,"property")],-1)),n[157]||(n[157]=l("td",null,[s("属性扩展字段 (支持 "),l("code",null,"el-image"),s(" 组件所有属性名)")],-1)),l("td",null,[t(o,{type:"object / function",details:"Partial<ImageProp> | (row: Row, index: number, props: PowerfulTableHeaderProps<'image', Row>) => Partial<ImageProp>"})]),n[158]||(n[158]=l("td",null,"-",-1))]),l("tr",null,[l("td",null,[n[159]||(n[159]=l("code",null,"on",-1)),t(a,{type:"success",content:"2.2.4"})]),n[160]||(n[160]=l("td",null,[s("事件对象，接收下面 "),l("code",null,"Emit"),s(" 相应方法名称")],-1)),l("td",null,[t(o,{type:"object",details:"{[Image Emit 方法名]: ({row: Row, index: number, props: PowerfulTableHeaderProps<'image'>}, event: Event) => void}"})]),n[161]||(n[161]=l("td",null,"-",-1))])])])]),n[351]||(n[351]=e(`<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#6A9955;">// ...</span></span>
<span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C8C8C8;">label</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;图片&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#6A9955;">//显示的标题</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C8C8C8;">props</span><span style="color:#D4D4D4;">: [</span></span>
<span class="line"><span style="color:#D4D4D4;">      {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">type:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">prop:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;imageUrl&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">data:</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">setData</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">Lists</span><span style="color:#D4D4D4;">&gt;({</span></span>
<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">on:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#DCDCAA;">load</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> ({</span><span style="color:#9CDCFE;">row</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">props</span><span style="color:#D4D4D4;">}, </span><span style="color:#9CDCFE;">evt</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {},</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#DCDCAA;">error</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> ({</span><span style="color:#9CDCFE;">row</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">props</span><span style="color:#D4D4D4;">}, </span><span style="color:#9CDCFE;">evt</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {}</span></span>
<span class="line"><span style="color:#D4D4D4;">          }</span></span>
<span class="line"><span style="color:#D4D4D4;">        }),</span></span>
<span class="line"><span style="color:#D4D4D4;">      },</span></span>
<span class="line"><span style="color:#D4D4D4;">    ],</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#6A9955;">// ...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">label</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;图片&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//显示的标题</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">props</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        type: </span><span style="color:#032F62;">&#39;image&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        prop: </span><span style="color:#032F62;">&#39;imageUrl&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        data: </span><span style="color:#6F42C1;">setData</span><span style="color:#24292E;">&lt;</span><span style="color:#032F62;">&#39;image&#39;</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">Lists</span><span style="color:#24292E;">&gt;({</span></span>
<span class="line"><span style="color:#24292E;">          on: {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">load</span><span style="color:#24292E;">: ({</span><span style="color:#E36209;">row</span><span style="color:#24292E;">, </span><span style="color:#E36209;">index</span><span style="color:#24292E;">, </span><span style="color:#E36209;">props</span><span style="color:#24292E;">}, </span><span style="color:#E36209;">evt</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {},</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">error</span><span style="color:#24292E;">: ({</span><span style="color:#E36209;">row</span><span style="color:#24292E;">, </span><span style="color:#E36209;">index</span><span style="color:#24292E;">, </span><span style="color:#E36209;">props</span><span style="color:#24292E;">}, </span><span style="color:#E36209;">evt</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {}</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">        }),</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#6A737D;">// ...</span></span></code></pre></div>`,1)),l("h6",P,[n[164]||(n[164]=s("Image Emit")),t(a,{type:"danger",content:"3.0.0"}),n[165]||(n[165]=s("/Event")),t(a,{type:"success",content:"2.2.4"}),n[166]||(n[166]=s()),n[167]||(n[167]=l("a",{class:"header-anchor",href:"#image-emit-event","aria-label":`Permalink to "Image Emit<tag type='danger' content=3.0.0 />/Event<tag type='success' content=2.2.4 />"`},"​",-1))]),n[352]||(n[352]=e('<div class="vp-table"><table><thead><tr><th>方法名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td><code>load</code></td><td>图片加载成功触发</td><td><code>e: Event</code></td></tr><tr><td><code>error</code></td><td>图片加载成功触发</td><td><code>e: Error</code></td></tr><tr><td><code>switch</code></td><td>图片加载成功触发</td><td><code>index: number</code></td></tr><tr><td><code>close</code></td><td>图片加载成功触发</td><td>-</td></tr></tbody></table></div><h5 id="type-is-btn" tabindex="-1">Type is Btn <a class="header-anchor" href="#type-is-btn" aria-label="Permalink to &quot;Type is Btn&quot;">​</a></h5>',2)),l("div",T,[l("table",null,[n[188]||(n[188]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[n[183]||(n[183]=l("tr",null,[l("td",null,[l("code",null,"tip")]),l("td",null,"提示文字"),l("td",null,[l("code",null,"string")]),l("td",null,"-")],-1)),n[184]||(n[184]=l("tr",null,[l("td",null,[l("code",null,"text")]),l("td",null,"按钮文字"),l("td",null,[l("code",null,"string")]),l("td",null,"-")],-1)),n[185]||(n[185]=l("tr",null,[l("td",null,[l("code",null,"style")]),l("td",null,"按钮样式"),l("td",null,[l("code",null,"CSSProperties")]),l("td",null,"-")],-1)),l("tr",null,[n[168]||(n[168]=l("td",null,[l("code",null,"showBtn")],-1)),n[169]||(n[169]=l("td",null,"控制按钮显示隐藏",-1)),l("td",null,[t(o,{type:"function",details:"(row: Row, index: number) => void / boolean"})]),n[170]||(n[170]=l("td",null,"-",-1))]),l("tr",null,[n[171]||(n[171]=l("td",null,[l("code",null,"beforeClick")],-1)),n[172]||(n[172]=l("td",null,[s("点击前事件, "),l("code",null,"props(当前配置的props) btnIndex(按钮下标) resolve(回调函数，传递boolean)")],-1)),l("td",null,[t(o,{type:"function",details:"({row, index, props, btnIndex, params}, resolve) => void"})]),n[173]||(n[173]=l("td",null,"-",-1))]),l("tr",null,[l("td",null,[n[174]||(n[174]=l("code",null,"click",-1)),t(a,{type:"success",content:"2.2.0"})]),n[175]||(n[175]=l("td",null,[s("点击事件, 传入 "),l("code",null,"click"),s(" 时 "),l("code",null,"beforeClick"),s(" 失效")],-1)),l("td",null,[t(o,{type:"function",details:"({props: PowerfulTableHeaderProps<'btn'>; params: any; row: Row; index: number}) => void"})]),n[176]||(n[176]=l("td",null,"-",-1))]),n[186]||(n[186]=l("tr",null,[l("td",null,[l("code",null,"params")]),l("td",null,"自定义数据"),l("td",null,[l("code",null,"any")]),l("td",null,"-")],-1)),n[187]||(n[187]=l("tr",null,[l("td",null,[l("code",null,"isMore")]),l("td",null,[s("是否更多 当 "),l("code",null,"data"),s(" 是二维数组时有效")]),l("td",null,[l("code",null,"boolean")]),l("td",null,[l("code",null,"false")])],-1)),l("tr",null,[n[177]||(n[177]=l("td",null,[l("code",null,"property")],-1)),n[178]||(n[178]=l("td",null,[s("属性扩展字段 (支持 "),l("code",null,"el-button"),s(" 组件所有属性名)")],-1)),l("td",null,[t(o,{type:"object / function",details:"Partial<ButtonProp> | ({ row: Row, index: number, props: PowerfulTableHeaderProps<'btn', Row> }) => Partial<ButtonProp>"})]),n[179]||(n[179]=l("td",null,"-",-1))]),l("tr",null,[n[180]||(n[180]=l("td",null,[l("code",null,"tipProperty")],-1)),n[181]||(n[181]=l("td",null,"属性扩展字段",-1)),l("td",null,[t(o,{type:"object",details:"Partial<ElTooltipProps>"})]),n[182]||(n[182]=l("td",null,"-",-1))])])])]),n[353]||(n[353]=l("h5",{id:"type-is-switch",tabindex:"-1"},[s("Type is Switch "),l("a",{class:"header-anchor",href:"#type-is-switch","aria-label":'Permalink to "Type is Switch"'},"​")],-1)),l("div",F,[l("table",null,[n[196]||(n[196]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[n[195]||(n[195]=l("tr",null,[l("td",null,[l("code",null,"style")]),l("td",null,"开关自定义样式"),l("td",null,[l("code",null,"CSSProperties")]),l("td",null,"-")],-1)),l("tr",null,[n[189]||(n[189]=l("td",null,[l("code",null,"property")],-1)),n[190]||(n[190]=l("td",null,[s("属性扩展字段 (支持 "),l("code",null,"el-switch"),s(" 组件所有属性名)")],-1)),l("td",null,[t(o,{type:"object / function",details:"Partial<SwitchProp> | ({ row: Row, index: number, props: PowerfulTableHeaderProps<'switch', Row> }) => Partial<SwitchProp>"})]),n[191]||(n[191]=l("td",null,"-",-1))]),l("tr",null,[l("td",null,[n[192]||(n[192]=l("code",null,"on",-1)),t(a,{type:"success",content:"2.2.4"})]),n[193]||(n[193]=l("td",null,[s("事件对象，接收下面 "),l("code",null,"Emit"),s(" 相应方法名称")],-1)),l("td",null,[t(o,{type:"object",details:"{[Switch Emit 方法名]: ({row: Row, index: number, props: PowerfulTableHeaderProps<'switch'>}, event: Event) => void}"})]),n[194]||(n[194]=l("td",null,"-",-1))])])])]),l("h6",A,[n[197]||(n[197]=s("Switch Emit")),t(a,{type:"danger",content:"3.0.0"}),n[198]||(n[198]=s("/Event")),t(a,{type:"success",content:"2.2.4"}),n[199]||(n[199]=s()),n[200]||(n[200]=l("a",{class:"header-anchor",href:"#switch-emit-event","aria-label":`Permalink to "Switch Emit<tag type='danger' content=3.0.0 />/Event<tag type='success' content=2.2.4 />"`},"​",-1))]),n[354]||(n[354]=e('<div class="vp-table"><table><thead><tr><th>方法名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td><code>change</code></td><td><code>switch</code> 状态发生变化时的回调函数</td><td><code>val</code> 新状态的值</td></tr></tbody></table></div><h5 id="type-is-input-or-textarea" tabindex="-1">Type is Input or Textarea <a class="header-anchor" href="#type-is-input-or-textarea" aria-label="Permalink to &quot;Type is Input or Textarea&quot;">​</a></h5>',2)),l("div",x,[l("table",null,[n[212]||(n[212]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[n[210]||(n[210]=l("tr",null,[l("td",null,[l("code",null,"style")]),l("td",null,"输入框样式"),l("td",null,[l("code",null,"CSSProperties")]),l("td",null,"-")],-1)),l("tr",null,[n[201]||(n[201]=l("td",null,[l("code",null,"slot")],-1)),n[202]||(n[202]=l("td",null,"输入框前置或后置",-1)),l("td",null,[t(o,{type:"enum",details:"'prepend' | 'append' | 'prefix' | 'suffix'"})]),n[203]||(n[203]=l("td",null,"-",-1))]),n[211]||(n[211]=l("tr",null,[l("td",null,[l("code",null,"symbol")]),l("td",null,"文字或者符号在插槽中显示"),l("td",null,[l("code",null,"string")]),l("td",null,"-")],-1)),l("tr",null,[n[204]||(n[204]=l("td",null,[l("code",null,"property")],-1)),n[205]||(n[205]=l("td",null,[s("属性扩展字段 (支持 "),l("code",null,"el-input"),s(" 组件所有属性名)")],-1)),l("td",null,[t(o,{type:"object / function",details:"Partial<InputProp> | ({ row: Row, index: number, props: PowerfulTableHeaderProps<'input', Row> }) => Partial<InputProp>"})]),n[206]||(n[206]=l("td",null,"-",-1))]),l("tr",null,[l("td",null,[n[207]||(n[207]=l("code",null,"on",-1)),t(a,{type:"success",content:"2.2.4"})]),n[208]||(n[208]=l("td",null,[s("事件对象，接收下面 "),l("code",null,"Emit"),s(" 相应方法名称")],-1)),l("td",null,[t(o,{type:"object",details:"{[Input Emit 方法名]: ({row: Row, index: number, props: PowerfulTableHeaderProps<'input'>}, event: Event) => void}"})]),n[209]||(n[209]=l("td",null,"-",-1))])])])]),l("h6",k,[n[213]||(n[213]=s("Input Emit")),t(a,{type:"danger",content:"3.0.0"}),n[214]||(n[214]=s("/Event")),t(a,{type:"success",content:"2.2.4"}),n[215]||(n[215]=s()),n[216]||(n[216]=l("a",{class:"header-anchor",href:"#input-emit-event","aria-label":`Permalink to "Input Emit<tag type='danger' content=3.0.0 />/Event<tag type='success' content=2.2.4 />"`},"​",-1))]),n[355]||(n[355]=e('<div class="vp-table"><table><thead><tr><th>方法名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td><code>blur</code></td><td>输入框失去焦点时触发</td><td><code>event: FocusEvent</code></td></tr><tr><td><code>focus</code></td><td>输入框获得焦点时触发</td><td><code>event: FocusEvent</code></td></tr><tr><td><code>change</code></td><td>数据改变时，当输入框失去焦点或用户按 Enter 时触发</td><td><code>value: string | number</code></td></tr><tr><td><code>input</code></td><td>在 <code>Input</code> 值改变时触发</td><td><code>value: string | number</code></td></tr><tr><td><code>clear</code></td><td>点击由 <code>clearable</code> 属性生成的清空按钮时触发</td><td>-</td></tr></tbody></table></div><h5 id="type-is-video" tabindex="-1">Type is Video <a class="header-anchor" href="#type-is-video" aria-label="Permalink to &quot;Type is Video&quot;">​</a></h5>',2)),l("div",q,[l("table",null,[n[224]||(n[224]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[n[223]||(n[223]=l("tr",null,[l("td",null,[l("code",null,"style")]),l("td",null,"样式"),l("td",null,[l("code",null,"CSSProperties")]),l("td",null,"-")],-1)),l("tr",null,[n[217]||(n[217]=l("td",null,[l("code",null,"property")],-1)),n[218]||(n[218]=l("td",null,[s("属性扩展字段 (支持 "),l("code",null,"video"),s(" 标签所有属性名)")],-1)),l("td",null,[t(o,{type:"object / function",details:"Partial<VideoHTMLAttributes> | ({ row: Row, index: number, props: PowerfulTableHeaderProps<'video', Row> }) => Partial<VideoHTMLAttributes>"})]),n[219]||(n[219]=l("td",null,"-",-1))]),l("tr",null,[l("td",null,[n[220]||(n[220]=l("code",null,"on",-1)),t(a,{type:"success",content:"2.2.4"})]),n[221]||(n[221]=l("td",null,[s("事件对象，接收下面 "),l("code",null,"Emit"),s(" 相应方法名称")],-1)),l("td",null,[t(o,{type:"object",details:"{[Video Emit 方法名]: ({row: Row, index: number, props: PowerfulTableHeaderProps<'video'>}, event: Event) => void}"})]),n[222]||(n[222]=l("td",null,"-",-1))])])])]),l("h6",S,[n[225]||(n[225]=s("Video Emit")),t(a,{type:"danger",content:"3.0.0"}),n[226]||(n[226]=s("/Event")),t(a,{type:"success",content:"2.2.4"}),n[227]||(n[227]=s()),n[228]||(n[228]=l("a",{class:"header-anchor",href:"#video-emit-event","aria-label":`Permalink to "Video Emit<tag type='danger' content=3.0.0 />/Event<tag type='success' content=2.2.4 />"`},"​",-1))]),l("div",R,[l("table",null,[n[233]||(n[233]=l("thead",null,[l("tr",null,[l("th",null,"方法名"),l("th",null,"说明"),l("th",null,"类型")])],-1)),l("tbody",null,[l("tr",null,[n[229]||(n[229]=l("td",null,[l("code",null,"play")],-1)),n[230]||(n[230]=l("td",null,"点击触发",-1)),l("td",null,[t(o,{type:"object",details:"{row: Row, index: number, prop: string, event: Event}"})])]),l("tr",null,[n[231]||(n[231]=l("td",null,[l("code",null,"pause")],-1)),n[232]||(n[232]=l("td",null,"点击触发",-1)),l("td",null,[t(o,{type:"object",details:"{row: Row, index: number, prop: string, event: Event}"})])])])])]),n[356]||(n[356]=l("h5",{id:"type-is-iconfont",tabindex:"-1"},[s("Type is Iconfont "),l("a",{class:"header-anchor",href:"#type-is-iconfont","aria-label":'Permalink to "Type is Iconfont"'},"​")],-1)),l("div",j,[l("table",null,[n[239]||(n[239]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[n[237]||(n[237]=l("tr",null,[l("td",null,[l("code",null,"class")]),l("td",null,"样式类"),l("td",null,[l("code",null,"string | string[]")]),l("td",null,"-")],-1)),n[238]||(n[238]=l("tr",null,[l("td",null,[l("code",null,"style")]),l("td",null,"图标自定义样式"),l("td",null,[l("code",null,"CSSProperties")]),l("td",null,"-")],-1)),l("tr",null,[l("td",null,[n[234]||(n[234]=l("code",null,"on",-1)),t(a,{type:"success",content:"2.2.4"})]),n[235]||(n[235]=l("td",null,[s("事件对象，接收下面 "),l("code",null,"Emit"),s(" 相应方法名称")],-1)),l("td",null,[t(o,{type:"object",details:"{click: ({row: Row, index: number, props: PowerfulTableHeaderProps<'iconfont'>}, event: Event) => void}"})]),n[236]||(n[236]=l("td",null,"-",-1))])])])]),l("h6",L,[n[240]||(n[240]=s("Iconfont Emit")),t(a,{type:"danger",content:"3.0.0"}),n[241]||(n[241]=s("/Event")),t(a,{type:"success",content:"2.2.4"}),n[242]||(n[242]=s()),n[243]||(n[243]=l("a",{class:"header-anchor",href:"#iconfont-emit-event","aria-label":`Permalink to "Iconfont Emit<tag type='danger' content=3.0.0 />/Event<tag type='success' content=2.2.4 />"`},"​",-1))]),l("div",B,[l("table",null,[n[246]||(n[246]=l("thead",null,[l("tr",null,[l("th",null,"方法名"),l("th",null,"说明"),l("th",null,"类型")])],-1)),l("tbody",null,[l("tr",null,[n[244]||(n[244]=l("td",null,[l("code",null,"click")],-1)),n[245]||(n[245]=l("td",null,"点击触发",-1)),l("td",null,[t(o,{type:"object",details:"{row: Row, index: number, prop: string, event: Event}"})])])])])]),n[357]||(n[357]=l("h5",{id:"type-is-rate",tabindex:"-1"},[s("Type is Rate "),l("a",{class:"header-anchor",href:"#type-is-rate","aria-label":'Permalink to "Type is Rate"'},"​")],-1)),l("div",H,[l("table",null,[n[254]||(n[254]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[n[253]||(n[253]=l("tr",null,[l("td",null,[l("code",null,"style")]),l("td",null,"样式"),l("td",null,[l("code",null,"CSSProperties")]),l("td",null,"-")],-1)),l("tr",null,[n[247]||(n[247]=l("td",null,[l("code",null,"property")],-1)),n[248]||(n[248]=l("td",null,[s("属性扩展字段 (支持 "),l("code",null,"el-rate"),s(" 组件所有属性名)")],-1)),l("td",null,[t(o,{type:"object / function",details:"Partial<RateProps> | ({ row: Row, index: number, props: PowerfulTableHeaderProps<'rate', Row> }) => Partial<RateProps>"})]),n[249]||(n[249]=l("td",null,"-",-1))]),l("tr",null,[l("td",null,[n[250]||(n[250]=l("code",null,"on",-1)),t(a,{type:"success",content:"2.2.4"})]),n[251]||(n[251]=l("td",null,[s("事件对象，接收下面 "),l("code",null,"Emit"),s(" 相应方法名称")],-1)),l("td",null,[t(o,{type:"object",details:"{change: ({row: Row, index: number, props: PowerfulTableHeaderProps<'rate'>}, event: Event) => void}"})]),n[252]||(n[252]=l("td",null,"-",-1))])])])]),l("h6",I,[n[255]||(n[255]=s("Rate Emit")),t(a,{type:"danger",content:"3.0.0"}),n[256]||(n[256]=s("/Event")),t(a,{type:"success",content:"2.2.4"}),n[257]||(n[257]=s()),n[258]||(n[258]=l("a",{class:"header-anchor",href:"#rate-emit-event","aria-label":`Permalink to "Rate Emit<tag type='danger' content=3.0.0 />/Event<tag type='success' content=2.2.4 />"`},"​",-1))]),n[358]||(n[358]=e('<div class="vp-table"><table><thead><tr><th>方法名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td><code>change</code></td><td>值改变触发</td><td><code>val</code> 改变后的值</td></tr></tbody></table></div><h5 id="type-is-href" tabindex="-1">Type is Href <a class="header-anchor" href="#type-is-href" aria-label="Permalink to &quot;Type is Href&quot;">​</a></h5>',2)),l("div",N,[l("table",null,[n[269]||(n[269]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[n[268]||(n[268]=l("tr",null,[l("td",null,[l("code",null,"style")]),l("td",null,"自定义样式"),l("td",null,[l("code",null,"CSSProperties")]),l("td",null,"-")],-1)),l("tr",null,[n[259]||(n[259]=l("td",null,[l("code",null,"target")],-1)),n[260]||(n[260]=l("td",null,"跳转类型",-1)),l("td",null,[t(o,{type:"enum",details:"'_self' | '_blank' | '_parent' | '_top'"})]),n[261]||(n[261]=l("td",null,[l("code",null,"'\\_blank'")],-1))]),l("tr",null,[n[262]||(n[262]=l("td",null,[l("code",null,"text")],-1)),n[263]||(n[263]=l("td",null,"所显示的文本",-1)),l("td",null,[t(o,{type:"string / function",details:"(row: Row) => string"})]),n[264]||(n[264]=l("td",null,"-",-1))]),l("tr",null,[n[265]||(n[265]=l("td",null,[l("code",null,"property")],-1)),n[266]||(n[266]=l("td",null,[s("属性扩展字段 (支持 "),l("code",null,"el-link"),s(" 组件所有属性名)")],-1)),l("td",null,[t(o,{type:"object / function",details:"Partial<LinkProps> | ({ row: Row, index: number, props: PowerfulTableHeaderProps<'href', Row> }) => Partial<LinkProps>"})]),n[267]||(n[267]=l("td",null,"-",-1))])])])]),n[359]||(n[359]=e(`<h5 id="type-is-slot" tabindex="-1">Type is Slot <a class="header-anchor" href="#type-is-slot" aria-label="Permalink to &quot;Type is Slot&quot;">​</a></h5><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-7_6zT" id="tab-dt2y-4B" checked="checked"><label for="tab-dt2y-4B">index-data.ts</label><input type="radio" name="group-7_6zT" id="tab-XvlFcyN"><label for="tab-XvlFcyN">app.vue</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">type</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">PowerfulTableHeader</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;el-powerful-table-ts/es/typings&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Lists</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">header</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">PowerfulTableHeader</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Lists</span><span style="color:#D4D4D4;">&gt;[] = [</span></span>
<span class="line"><span style="color:#D4D4D4;">  {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">label:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;slot（插槽）&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#6A9955;">//显示的标题</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">props:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">      {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">type:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;slot&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">slotName:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;A&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      },</span></span>
<span class="line"><span style="color:#D4D4D4;">    ],</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">type</span><span style="color:#24292E;"> { PowerfulTableHeader } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;el-powerful-table-ts/es/typings&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Lists</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">id</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">header</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PowerfulTableHeader</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Lists</span><span style="color:#24292E;">&gt;[] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    label: </span><span style="color:#032F62;">&quot;slot（插槽）&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//显示的标题</span></span>
<span class="line"><span style="color:#24292E;">    props: [</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        type: </span><span style="color:#032F62;">&quot;slot&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        slotName: </span><span style="color:#032F62;">&quot;A&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">powerful-table</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  &lt;template #A=&quot;{ row,index }&quot;&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    &lt;div&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">      &lt;el-image</span></span>
<span class="line"><span style="color:#D4D4D4;">        style=&quot;width: 100px; border-radius: 10px&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">        :src=&quot;row.imageUrl&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">      &gt;&lt;/el-image&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    &lt;/div&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  &lt;/template&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">powerful-table</span><span style="color:#808080;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">powerful-table</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;template #A=&quot;{ row,index }&quot;&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;div&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;el-image</span></span>
<span class="line"><span style="color:#24292E;">        style=&quot;width: 100px; border-radius: 10px&quot;</span></span>
<span class="line"><span style="color:#24292E;">        :src=&quot;row.imageUrl&quot;</span></span>
<span class="line"><span style="color:#24292E;">      &gt;&lt;/el-image&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/div&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/template&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">powerful-table</span><span style="color:#24292E;">&gt;</span></span></code></pre></div></div></div><h5 id="type-is-tag" tabindex="-1">Type is Tag <a class="header-anchor" href="#type-is-tag" aria-label="Permalink to &quot;Type is Tag&quot;">​</a></h5>`,3)),l("div",K,[l("table",null,[n[277]||(n[277]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"TS类型"),l("th",null,"默认值")])],-1)),l("tbody",null,[l("tr",null,[n[270]||(n[270]=l("td",null,[l("code",null,"color")],-1)),n[271]||(n[271]=l("td",null,"背景颜色，返回颜色值",-1)),l("td",null,[t(o,{type:"function",details:"(row,tag) => string"})]),n[272]||(n[272]=l("td",null,"-",-1))]),n[276]||(n[276]=l("tr",null,[l("td",null,[l("code",null,"number")]),l("td",null,"需要显示前多少个"),l("td",null,[l("code",null,"number")]),l("td",null,[l("code",null,"3")])],-1)),l("tr",null,[n[273]||(n[273]=l("td",null,[l("code",null,"property")],-1)),n[274]||(n[274]=l("td",null,[s("属性扩展字段 (支持 "),l("code",null,"el-tag"),s(" 组件所有属性名)")],-1)),l("td",null,[t(o,{type:"object / function",details:"Partial<TagProps> | ({ row, index, props }) => Partial<TagProps>"})]),n[275]||(n[275]=l("td",null,"-",-1))])])])]),l("h6",O,[n[278]||(n[278]=s("Tag Emit")),t(a,{type:"danger",content:"3.0.0"}),n[279]||(n[279]=s("/Event")),t(a,{type:"success",content:"2.2.4"}),n[280]||(n[280]=s()),n[281]||(n[281]=l("a",{class:"header-anchor",href:"#tag-emit-event","aria-label":`Permalink to "Tag Emit<tag type='danger' content=3.0.0 />/Event<tag type='success' content=2.2.4 />"`},"​",-1))]),l("div",z,[l("table",null,[n[285]||(n[285]=l("thead",null,[l("tr",null,[l("th",null,"方法名"),l("th",null,"说明"),l("th",null,"类型")])],-1)),l("tbody",null,[l("tr",null,[n[282]||(n[282]=l("td",null,[l("code",null,"click")],-1)),n[283]||(n[283]=l("td",null,"点击触发",-1)),l("td",null,[t(o,{type:"object",details:"{row: Row, index: number, prop: string, event: Event}"})])]),n[284]||(n[284]=l("tr",null,[l("td",null,[l("code",null,"close")]),l("td",null,"关闭 Tag 时触发的事件"),l("td",null,"-")],-1))])])]),n[360]||(n[360]=l("h2",{id:"emits",tabindex:"-1"},[s("Emits "),l("a",{class:"header-anchor",href:"#emits","aria-label":'Permalink to "Emits"'},"​")],-1)),l("div",U,[l("table",null,[n[301]||(n[301]=l("thead",null,[l("tr",null,[l("th",null,"事件名"),l("th",null,"说明"),l("th",null,"类型")])],-1)),l("tbody",null,[l("tr",null,[n[286]||(n[286]=l("td",null,[l("code",null,"size-change")],-1)),n[287]||(n[287]=l("td",null,[s("分页器切换, "),l("code",null,"select"),s(" 所有页中选中的数据")],-1)),l("td",null,[t(o,{type:"function",details:"({ pageNum: number; pageSize: number }, select: Row[])"})])]),l("tr",null,[n[288]||(n[288]=l("td",null,[l("code",null,"sort-custom")],-1)),n[289]||(n[289]=l("td",null,"远程排序",-1)),l("td",null,[t(o,{type:"function",details:"({ column: any, prop: string, order: string })"})])]),l("tr",null,[n[290]||(n[290]=l("td",null,[l("code",null,"batch-operate")],-1)),n[291]||(n[291]=l("td",null,"批量操作",-1)),l("td",null,[t(o,{type:"function",details:"({ ids: (string | number)[], item: PowerfulTableLabelValue, rows: Row[]})"})])]),l("tr",null,[n[292]||(n[292]=l("td",null,[l("code",null,"btn-click")],-1)),n[293]||(n[293]=l("td",null,"表格操作按钮",-1)),l("td",null,[t(o,{type:"function",details:"({params: BtnDataType['params'], row: Row, index: number})"})])]),l("tr",null,[n[294]||(n[294]=l("td",null,[l("code",null,"btn-plus-change")],-1)),n[295]||(n[295]=l("td",null,[s("表格顶部左侧操作按钮，"),l("code",null,"rows"),s(" 返回所有选中的行")],-1)),l("td",null,[t(o,{type:"function",details:"({ effect: BtnConfig.BtnList['effect'], rows: Row[] })"})])]),n[300]||(n[300]=l("tr",null,[l("td",null,[l("code",null,"btn-plus-refresh")]),l("td",null,"表格顶部刷新按钮"),l("td",null,"-")],-1)),l("tr",null,[n[296]||(n[296]=l("td",null,[l("code",null,"row-click")],-1)),n[297]||(n[297]=l("td",null,"行点击事件",-1)),l("td",null,[t(o,{type:"function",details:"({row: Row, column: any, event: Event})"})])]),l("tr",null,[l("td",null,[n[298]||(n[298]=l("code",null,"component-event",-1)),t(a,{type:"danger",content:"3.0.0"})]),n[299]||(n[299]=l("td",null,"内部组件事件",-1)),l("td",null,[t(o,{type:"function",details:"({componentName: keyof _TYPE | 'filter', eventType: string}, ...arg: any)"})])])])])]),n[361]||(n[361]=e('<h2 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h2><div class="vp-table"><table><thead><tr><th>插槽名</th><th>说明</th></tr></thead><tbody><tr><td><code>btn-left</code></td><td>表格顶部左侧按钮</td></tr><tr><td><code>btn-right</code></td><td>表格顶部右侧按钮</td></tr><tr><td><code>empty</code></td><td>表格内数据为空时内容</td></tr><tr><td><code>refresh</code></td><td>刷新</td></tr><tr><td><code>[slotName]</code></td><td>表格内自定义的插槽名称</td></tr><tr><td><code>[headerSlotName]</code></td><td>表格列头内自定义的插槽名称</td></tr></tbody></table></div>',2)),l("h2",V,[n[302]||(n[302]=s("Utils")),t(a,{type:"success",content:"2.2.4"}),n[303]||(n[303]=s()),n[304]||(n[304]=l("a",{class:"header-anchor",href:"#utils","aria-label":`Permalink to "Utils<tag type='success' content=2.2.4 />"`},"​",-1))]),l("div",Y,[l("table",null,[n[313]||(n[313]=l("thead",null,[l("tr",null,[l("th",null,"函数名"),l("th",null,"说明"),l("th",null,"TS类型")])],-1)),l("tbody",null,[l("tr",null,[n[305]||(n[305]=l("td",null,[l("code",null,"getType")],-1)),n[306]||(n[306]=l("td",null,"获取变量类型",-1)),l("td",null,[t(o,{type:"function",details:"getType: <T>(target: T) => string"})])]),l("tr",null,[n[307]||(n[307]=l("td",null,[l("code",null,"deepClone")],-1)),n[308]||(n[308]=l("td",null,"深度克隆",-1)),l("td",null,[t(o,{type:"function",details:"deepClone: <T>(target: T) => T"})])]),l("tr",null,[n[309]||(n[309]=l("td",null,[l("code",null,"isTypeProtect")],-1)),n[310]||(n[310]=l("td",null,[l("a",{href:"https://www.tslang.cn/docs/handbook/advanced-types.html",target:"_blank",rel:"noreferrer"},"类型保护"),s(' 搜索 "用户自定义的类型保护"')],-1)),l("td",null,[t(o,{type:"function",details:"isTypeProtect: <T, P extends T>(obj: T, cb: (obj: T) => boolean) => obj is P"})])]),l("tr",null,[n[311]||(n[311]=l("td",null,[l("code",null,"setData")],-1)),n[312]||(n[312]=l("td",null,[s("设置 "),l("code",null,"PowerfulTableHeaderProps"),s(" 类型下 "),l("code",null,"data"),s(" 数据，可以获得更好的类型提示")],-1)),l("td",null,[t(o,{type:"function",details:"setData: <T extends keyof _TYPE<L>, L = any>(data: _TYPE<L>[T]) => _TYPE<L>[T]"})])])])])]),n[362]||(n[362]=e(`<div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-UXYsd" id="tab-eKX7GUD" checked="checked"><label for="tab-eKX7GUD">index.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code-dark"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">getType</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">deepClone</span><span style="color:#D4D4D4;">,</span><span style="color:#9CDCFE;">isTypeProtect</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">setData</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;el-plus-powerful-table/es&#39;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">log</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;console&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">getType</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;1&#39;</span><span style="color:#D4D4D4;">)) </span><span style="color:#6A9955;">// &#39;String&#39;</span></span>
<span class="line"><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">getType</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)) </span><span style="color:#6A9955;">// &#39;Number&#39;</span></span>
<span class="line"><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">getType</span><span style="color:#D4D4D4;">({})) </span><span style="color:#6A9955;">// &#39;Object&#39;</span></span>
<span class="line"><span style="color:#6A9955;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">a</span><span style="color:#D4D4D4;"> = {</span><span style="color:#9CDCFE;">a:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">b:</span><span style="color:#D4D4D4;"> {</span><span style="color:#9CDCFE;">a:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">c:</span><span style="color:#D4D4D4;"> {</span><span style="color:#9CDCFE;">a:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">}}}</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">b</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">deepClone</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;"> === </span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">c</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">number</span><span style="color:#D4D4D4;"> | []</span></span>
<span class="line"><span style="color:#9CDCFE;">c</span><span style="color:#D4D4D4;"> += </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;"> </span><span style="color:#6A9955;">// ts 报错</span></span>
<span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#DCDCAA;">isTypeProtect</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">typeof</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">c</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">number</span><span style="color:#D4D4D4;">&gt;(</span><span style="color:#9CDCFE;">c</span><span style="color:#D4D4D4;">, (</span><span style="color:#9CDCFE;">data</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">typeof</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">data</span><span style="color:#D4D4D4;"> === </span><span style="color:#CE9178;">&#39;number&#39;</span><span style="color:#D4D4D4;">)) {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">c</span><span style="color:#D4D4D4;"> += </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;"> </span><span style="color:#6A9955;">// 正常</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">headers</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">PowerfulTableHeader</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Lists</span><span style="color:#D4D4D4;">&gt;[] = [{</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">label:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;图片&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">props:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">    {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">type:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">prop:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;imageUrl&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">data:</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">setData</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#CE9178;">&#39;image&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">Lists</span><span style="color:#D4D4D4;">&gt;({</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#6A9955;">// 在这里输入的时候 idea 会提示有哪些属性</span></span>
<span class="line"><span style="color:#D4D4D4;">      }),</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">}]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { getType, deepClone,isTypeProtect, setData } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;el-plus-powerful-table/es&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { log } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;console&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">getType</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// &#39;String&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">getType</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// &#39;Number&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">getType</span><span style="color:#24292E;">({})) </span><span style="color:#6A737D;">// &#39;Object&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">a</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {a: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, b: {a: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, c: {a: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">}}}</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">b</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">deepClone</span><span style="color:#24292E;">(a)</span></span>
<span class="line"><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(a </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> b) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> c</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">c </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// ts 报错</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">isTypeProtect</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> c, </span><span style="color:#005CC5;">number</span><span style="color:#24292E;">&gt;(c, (</span><span style="color:#E36209;">data</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> data </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;number&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">  c </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 正常</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">headers</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PowerfulTableHeader</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Lists</span><span style="color:#24292E;">&gt;[] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [{</span></span>
<span class="line"><span style="color:#24292E;">  label: </span><span style="color:#032F62;">&#39;图片&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  props: [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      type: </span><span style="color:#032F62;">&#39;image&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      prop: </span><span style="color:#032F62;">&#39;imageUrl&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      data: </span><span style="color:#6F42C1;">setData</span><span style="color:#24292E;">&lt;</span><span style="color:#032F62;">&#39;image&#39;</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">Lists</span><span style="color:#24292E;">&gt;({</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 在这里输入的时候 idea 会提示有哪些属性</span></span>
<span class="line"><span style="color:#24292E;">      }),</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">}]</span></span></code></pre></div></div></div><h2 id="expose" tabindex="-1">Expose <a class="header-anchor" href="#expose" aria-label="Permalink to &quot;Expose&quot;">​</a></h2>`,2)),l("div",M,[l("table",null,[n[338]||(n[338]=l("thead",null,[l("tr",null,[l("th",null,"属性名"),l("th",null,"说明"),l("th",null,"类型")])],-1)),l("tbody",null,[l("tr",null,[n[314]||(n[314]=l("td",null,[l("code",null,"$slots")],-1)),n[315]||(n[315]=l("td",null,"所传递的插槽名称",-1)),l("td",null,[t(o,{type:"object",details:"PowerfulTableExpose['$slots']"})])]),l("tr",null,[n[316]||(n[316]=l("td",null,[l("code",null,"$attrs")],-1)),n[317]||(n[317]=l("td",null,[s("所传递的属性并且非 "),l("code",null,"props"),s(" 定义的属性名. "),l("a",{href:"https://cn.vuejs.org/guide/components/attrs.html#attribute-inheritance",target:"_blank",rel:"noreferrer"},"文档")],-1)),l("td",null,[t(o,{type:"object",details:"PowerfulTableExpose['$attrs']"})])]),l("tr",null,[n[318]||(n[318]=l("td",null,[l("code",null,"$refs")],-1)),n[319]||(n[319]=l("td",null,[s("表格 "),l("code",null,"Ref"),s(" 实例")],-1)),l("td",null,[t(o,{type:"object",details:"PowerfulTableExpose['$refs']"})])]),l("tr",null,[l("td",null,[n[320]||(n[320]=l("code",null,"props",-1)),t(a,{type:"success",content:"2.2.4"})]),n[321]||(n[321]=l("td",null,[s("表格 "),l("code",null,"props"),s(" 属性")],-1)),l("td",null,[t(o,{type:"object",details:"PowerfulTableExpose['props']"})])]),l("tr",null,[l("td",null,[n[322]||(n[322]=l("code",null,"injectProps",-1)),t(a,{type:"success",content:"2.2.4"})]),n[323]||(n[323]=l("td",null,[s("使用 "),l("code",null,"app.use"),s(" 时注入的数据")],-1)),l("td",null,[t(o,{type:"object",details:"PowerfulTableExpose['injectProps']"})])]),l("tr",null,[n[324]||(n[324]=l("td",null,[l("code",null,"headerLists")],-1)),n[325]||(n[325]=l("td",null,"过滤隐藏后的列",-1)),l("td",null,[t(o,{type:"array",details:"PowerfulTableExpose['headerLists']"})])]),l("tr",null,[n[326]||(n[326]=l("td",null,[l("code",null,"powerfulTableData")],-1)),n[327]||(n[327]=l("td",null,"内置数据也就是 vue2 中的 data",-1)),l("td",null,[t(o,{type:"object",details:"PowerfulTableExpose['powerfulTableData']"})])]),l("tr",null,[n[328]||(n[328]=l("td",null,[l("code",null,"stateData")],-1)),n[329]||(n[329]=l("td",null,"状态数据",-1)),l("td",null,[t(o,{type:"object",details:"PowerfulTableExpose['stateData']"})])]),l("tr",null,[n[330]||(n[330]=l("td",null,[l("code",null,"resetList")],-1)),n[331]||(n[331]=l("td",null,"重置数据发送请求",-1)),l("td",null,[t(o,{type:"function",details:"PowerfulTableExpose['resetList']"})])]),l("tr",null,[n[332]||(n[332]=l("td",null,[l("code",null,"getListData")],-1)),n[333]||(n[333]=l("td",null,"重新发送请求",-1)),l("td",null,[t(o,{type:"function",details:"PowerfulTableExpose['getListData']"})])]),l("tr",null,[n[334]||(n[334]=l("td",null,[l("code",null,"handleSelectionChange")],-1)),n[335]||(n[335]=l("td",null,"添加选中行",-1)),l("td",null,[t(o,{type:"function",details:"PowerfulTableExpose['handleSelectionChange']"})])]),l("tr",null,[n[336]||(n[336]=l("td",null,[l("code",null,"anewRender")],-1)),n[337]||(n[337]=l("td",null,"重新计算表格布局位置",-1)),l("td",null,[t(o,{type:"function",details:"PowerfulTableExpose['anewRender']"})])])])])])])}}});export{J as __pageData,Q as default};
